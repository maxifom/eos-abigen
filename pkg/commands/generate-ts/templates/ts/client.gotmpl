// Generated by eos-abigen version {{.Version}}
import {JsonRpc} from "eosjs";
import * as types from "./types";

export interface ClientOpts {
    rpc: JsonRpc;
}

export class Client {
    private readonly rpc: JsonRpc;

    public constructor(opts: ClientOpts) {
        this.rpc = opts.rpc;
    }
    {{ range .Methods }}
    public async {{.MethodName}}(params?: types.GetTableRowsParams): Promise<types.{{.ReturnNameRows}}> {
        let lower_bound = params?.lower_bound || params?.bounds || undefined;
        let upper_bound = params?.upper_bound || params?.bounds || undefined;
		let result: types.{{.ReturnNameRows}}Interm = await this.rpc.get_table_rows({
            json: true,
            code: params?.code || types.CONTRACT_NAME,
            scope: params?.scope || types.CONTRACT_NAME,
            table: "{{.TableName}}",
            lower_bound: lower_bound,
            upper_bound: upper_bound,
            index_position: params?.index_position,
            key_type: params?.key_type,
            limit: params?.limit,
            reverse: params?.reverse,
            show_payer: params?.show_payer,
        });

		return {
			more: result.more,
			next_key: result.next_key,
			rows: result.rows.map(r => types.map{{.ReturnName}}(r))
        };
    }
{{end -}}
}
