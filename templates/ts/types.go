package ts

import "strings"

var TypesTemplate = strings.TrimSpace(`// Generated by eos-abigen-js version {{.Version}}

import {JsonRpc} from "eosjs";

export const CONTRACT_NAME = "{{.ContractName}}";

export interface ClientOpts {
    rpc: JsonRpc;
}

export type GetTableRowsParams = Partial<{
    code: string
    scope: string
    bounds: string
    lower_bound: string
    upper_bound: string
    index_position: number
    key_type: string
    limit: number
    reverse: boolean
    show_payer: boolean
}>

export class Symbol {
	raw: string;
	precision: number;
	symbol_code: string;

	public constructor(raw: string) {
		this.raw = raw;
		const [precision, symbol_code] = raw.split(",", 2)
		this.precision = Number.parseInt(precision);
		this.symbol_code = symbol_code;
	}
}

export class Asset {
	raw: string;
	raw_quantity: string;
	quantity: number;
	precision: number;
	symbol_code: string;

	public constructor(raw: string) {
		this.raw = raw;
		const [quantity, symbol_code] = raw.split(" ", 2);
		this.raw_quantity = quantity;
		this.precision = 0;
		const splitted = quantity.split(".");
		if (splitted.length > 1) {
			this.precision = splitted[1].length;
		}
		
		this.quantity = Number.parseFloat(quantity);
		this.symbol_code = symbol_code;
	}
}

export type ExtendedAssetType = {
	quantity: string
	contract: string
}

export class ExtendedAsset {
	asset: Asset;
	contract: string;

	public constructor(raw: ExtendedAssetType) {
		this.asset = new Asset(raw.quantity);
		this.contract = raw.contract;
	}
}
{{ if ne .StructTypes nil }}{{ .StructTypes }}{{ end }}
{{ if ne .RowTypes nil }}{{ .RowTypes }}{{ end }}
`)
